<!DOCTYPE html>
<html lang="ko">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>전국 병원 사이트</title>
</head>
<body>
	
<form>
	<select id="clCd" >
	  <option value="none">=== 병원종류선택 ===</option>
	  <option value="01">상급종합병원</option>
	  <option value="11">종합병원</option>
	  <option value="21">병원</option>
	  <option value="28">요양병원</option>
	  <option value="29">정신병원</option>
	  <option value="31">의원</option>
	  <option value="41">치과병원</option>
	  <option value="51">치과의원</option>
	  <option value="61">조산원</option>
	  <option value="71">보건소</option>
	  <option value="72">보건지소</option>
	  <option value="73">보건진료소</option>
	  <option value="75">보건의료원</option>
	  <option value="92">한방병원</option>
	  <option value="93">한의원</option>
	</select>
  </form>

  <form>
	<select id="dgsbjtCd" >
	  <option value="none">=== 진료과목선택 ===</option>
	  <option value="00">일반의</option>
	  <option value="01">내과</option>
	  <option value="02">신경과</option>
	  <option value="03">정신건강의학과</option>
	  <option value="04">외과</option>
	  <option value="05">정형외과</option>
	  <option value="06">신경외과</option>
	  <option value="07">흉부외과</option>
	  <option value="08">성형외과</option>
	  <option value="09">마취통증의학과</option>
	  <option value="10">산부인과</option>
	  <option value="11">소아청소년과</option>
	  <option value="12">안과</option>
	  <option value="13">이비인후과</option>
	  <option value="14">피부과</option>
	  <option value="15">비뇨의학과</option>
	  <option value="16">영상의학과</option>
	  <option value="17">방사선종양학과</option>
	  <option value="18">병리과</option>
	  <option value="19">진단검사의학과</option>
	  <option value="20">결핵과</option>
	  <option value="21">재활의학과</option>
	  <option value="22">핵의학과</option>
	  <option value="23">가정의학과</option>
	  <option value="24">응급의학과</option>
	  <option value="25">직업환경의학과</option>
	  <option value="26">예방의학과</option>
	  <option value="50">구강악안면외과</option>
	  <option value="51">치과보철과</option>
	  <option value="52">치과교정과</option>
	  <option value="53">소아치과</option>
	  <option value="54">치주과</option>
	  <option value="55">치과보존과</option>
	  <option value="56">구강내과</option>
	  <option value="57">영상치의학과</option>
	  <option value="58">구강병리과</option>
	  <option value="59">예방치과</option>
	  <option value="61">통합치의학과</option>
	  <option value="80">한방내과</option>
	  <option value="81">한방부인과</option>
	  <option value="82">한방소아과</option>
	  <option value="83">한방안이비인후피부과</option>
	  <option value="84">한방신경정신과</option>
	  <option value="85">침구과</option>
	  <option value="86">한방재활의학과</option>
	  <option value="87">사상체질과</option>
	  <option value="88">한방응급</option>
	</select>
  </form>

<button id="my-button">완료</button>

<input type='text' id='geo' disabled value style='width:200px;height:50px;' placeholder=" 주소를 입력하여 지도위치 이동"/>
<button id="my" disabled value>주소입력</button>
	
	<div id="map" style="width:100%;height:100vh;"></div>

	<script type="text/javascript" src="http://dapi.kakao.com/v2/maps/sdk.js?appkey=becc7422f0b5814b3b0ff2eabeb25a5b&libraries=services,clusterer,drawing"></script>
	<script>
		const queryString = decodeURI(location.search,"UTF-8");
		const urlParams = new URLSearchParams(queryString);
		const user_ID = urlParams.get("id");
		document.write("<h2>"+user_ID+"님</h2>")
		

		function btnActive()  {
				const target1 = document.getElementById('geo');
				const target2 = document.getElementById('my');
				target1.disabled = false;
				target2.disabled = false;
		};

		var url = "http://apis.data.go.kr/B551182/hospInfoService1/getHospBasisList1"
		url += '?' + encodeURIComponent('serviceKey') + '=' + 'Ybc%2BkxYm5B%2BPtqHKQjx2rsJVrn3G5l2uC%2FU43Tdr9%2BWYceDhavnBURnFHZMNQC%2BMWFpoEQEcPG7OyNRi200S8g%3D%3D';
		url += '&' + encodeURIComponent('pageNo') + '=' + encodeURIComponent('1');
		url += '&' + encodeURIComponent('numOfRows') + '=' + encodeURIComponent('80000');
		url += '&' + encodeURIComponent('_type') + '=' + encodeURIComponent('json');

		document.getElementById("my-button").onclick = function () {

			btnActive();			

			var clCdnum = document.getElementById("clCd");

			if(clCdnum.options[clCdnum.selectedIndex].value == "none"){
				//do nothing
			} 
			else{
				url += '&' + encodeURIComponent('clCd') + '=' + encodeURIComponent(clCdnum.options[clCdnum.selectedIndex].value);
			}

			var dgsbjtCdnum = document.getElementById("dgsbjtCd");

			if(dgsbjtCdnum.options[dgsbjtCdnum.selectedIndex].value == "none"){
				//do nothing
			}
			else{
				url += '&' + encodeURIComponent('dgsbjtCd') + '=' + encodeURIComponent(dgsbjtCdnum.options[dgsbjtCdnum.selectedIndex].value);
			}
			
      		navigator.geolocation.getCurrentPosition(function(pos) {

				var latitude = pos.coords.latitude;
				var longitude = pos.coords.longitude;
	
				var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
					mapOption = {
						center: new kakao.maps.LatLng(latitude, longitude), // 지도의 중심좌표
						level: 5, // 지도의 확대 레벨
						mapTypeId: kakao.maps.MapTypeId.ROADMAP // 지도종류
					};
					
						// 지도를 생성한다 
				var map = new kakao.maps.Map(mapContainer, mapOption);

				map.setMaxLevel(8);

				// 인포윈도우를 표시하는 클로저를 만드는 함수입니다 
				function makeOverListener(map, marker, infowindow) {
					return function () {
						infowindow.open(map, marker);
					};
				}

				// 인포윈도우를 닫는 클로저를 만드는 함수입니다 
				function makeOutListener(infowindow) {
					return function () {
						infowindow.close();
					};
				}

				// 마커 클러스터러를 생성합니다 
				var clusterer = new kakao.maps.MarkerClusterer({
					map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체 
					averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정 
					minLevel: 5 // 클러스터 할 최소 지도 레벨 
				});

				// 주소-좌표 변환 객체를 생성합니다
				var geocoder = new kakao.maps.services.Geocoder();

				//주소입력 버튼 클릭 이벤트
				document.getElementById("my").onclick = function () {

					var geo = document.getElementById("geo").value;

						// 주소로 좌표를 검색합니다
						geocoder.addressSearch(geo, function(result, status) {
					
							if (status === kakao.maps.services.Status.OK) {
								// 주소에 해당하는 위도 경도 위치를 생성합니다 
								var coords = new kakao.maps.LatLng(result[0].y, result[0].x);
								// 지도 중심을 이동 시킵니다
								map.setCenter(coords);
								}
							else{
								alert("주소를 찾을 수 없습니다.")
							}
							});   
						
					};

				fetch(url)
					.then(res => res.json())
					.then(myJson => {

						var markers = [];
						const data = myJson.response
						const item = data["body"]["items"]["item"]

						
						for (var i in item) {

							// 지도에 마커를 생성하고 표시한다
							var marker = new kakao.maps.Marker({
								position: new kakao.maps.LatLng(
									item[i]["YPos"],
									item[i]["XPos"]
								), // 마커의 좌표

								map: map // 마커를 표시할 지도 객체
								
							});

							var navigation = "https://map.kakao.com/link/to/"
							var hospsite = item[i]["hospUrl"]
					

							navigation += "선택병원"
							navigation += ',' + item[i]["YPos"]
							navigation += ',' + item[i]["XPos"]


							var iwContent = item[i]["yadmNm"]
								+ "<br/>" + "주소 :" +item[i]["addr"]
								+ "<br/>" + "전화번호 :" +item[i]["telno"]
								+ "<br/>" + "사이트URL :" + hospsite
								+ "<br/>" + `<div style="padding:5px;"><a target="_blank" href = ${hospsite}>해당병원 사이트 연결</a></div>`
								+ `<div style="padding:5px;"><a target="_blank" href = ${navigation}>해당병원 길찾기</a></div>`,
    						iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다

							// 마커 위에 표시할 인포윈도우를 생성한다
							var infowindow = new kakao.maps.InfoWindow({
								content : `<div style="width:100%; padding:5px;">${iwContent}</div>`,
   								removable : iwRemoveable
							});


							kakao.maps.event.addListener(
								marker,
								'click',
								makeOverListener(map, marker, infowindow)
							);
							

							markers.push(marker);

						}

						// 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
						var zoomControl = new kakao.maps.ZoomControl();
						map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);
			

						// 클러스터러에 마커들을 추가합니다
						clusterer.addMarkers(markers);


					});
			});
			
		};

		
	</script>
</body>

</html>	